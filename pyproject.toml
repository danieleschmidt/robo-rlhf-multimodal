[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "robo-rlhf-multimodal"
version = "0.1.0"
description = "End-to-end pipeline for multimodal reinforcement learning from human feedback (RLHF) in robotics"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Daniel Schmidt", email = "daniel@example.com"},
]
keywords = ["robotics", "rlhf", "multimodal", "reinforcement-learning", "human-feedback"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.21.0",
    "torch>=1.12.0",
    "transformers>=4.20.0",
    "opencv-python>=4.6.0",
    "gymnasium>=0.26.0",
    "pydantic>=1.10.0",
    "fastapi>=0.95.0",
    "uvicorn>=0.20.0",
    "scikit-learn>=1.0.0",
    "asyncio>=3.4.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
mujoco = ["mujoco>=2.3.0", "dm-control>=1.0.0"]
isaac = ["isaacsim>=2023.1.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=2.5.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "tox>=4.0.0",
]
full = ["robo-rlhf-multimodal[mujoco,isaac,dev]"]

[project.urls]
Homepage = "https://github.com/danielschmidt/robo-rlhf-multimodal"
Repository = "https://github.com/danielschmidt/robo-rlhf-multimodal"
Issues = "https://github.com/danielschmidt/robo-rlhf-multimodal/issues"
Documentation = "https://robo-rlhf-multimodal.readthedocs.io"
Changelog = "https://github.com/danielschmidt/robo-rlhf-multimodal/blob/main/CHANGELOG.md"

[project.scripts]
robo-rlhf = "robo_rlhf.cli:main"
collect-demos = "robo_rlhf.scripts.collect_demos:main"
train-rlhf = "robo_rlhf.scripts.train_rlhf:main"
preference-server = "robo_rlhf.preference.server:main"
evaluate-policy = "robo_rlhf.scripts.evaluate:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["robo_rlhf*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gpu: marks tests that require GPU",
    "mujoco: marks tests that require MuJoCo",
    "isaac: marks tests that require Isaac Sim",
    "ros: marks tests that require ROS2"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

[tool.coverage.run]
source = ["robo_rlhf"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "venv/*",
    ".venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]